install.packages(c("parlitools", "readxl", "tidyverse"))
list <- read.csv(url("https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/792138/Election_Timetable_in_England_2019.pdf"))
?read.csv
list <- read.csv(url("https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/792138/Election_Timetable_in_England_2019.pdf"), header=TRUE)
?readPDF
install.packages("pdftools")
install.packages("pdftools")
library(pdftools)
# Load packages
library(tidyverse)
library(parlitools)
library(readxl)
setwd("~/R_projects/Election-Calendar")
list <- pdf_text("data/Election_Timetable_in_England_2019.pdf")
list
?table
?parlitools
install.packages("tabulizer")
library(tabulizer)
library(tabulizer)
#met districts are mainly elected by thirds, those that are not:
# Doncaster, Rotherham, Birmingham all elect whole council
# Districts are weird and will need lot of separate info
# Unitary Authorities
#
la_codes
#met districts are mainly elected by thirds, those that are not:
# Doncaster, Rotherham, Birmingham all elect whole council
# Districts are weird and will need lot of separate info
# Unitary Authorities
#
skim(la_codes)
install.packages('skimr')
library(skimr)
#met districts are mainly elected by thirds, those that are not:
# Doncaster, Rotherham, Birmingham all elect whole council
# Districts are weird and will need lot of separate info
# Unitary Authorities
#
skim(la_codes)
#met districts are mainly elected by thirds, those that are not:
# Doncaster, Rotherham, Birmingham all elect whole council
# Districts are weird and will need lot of separate info
# Unitary Authorities
#
unique(la_codes$type)
df <- la_codes %>% filter(type!="Sui Generis|Scotland|Wales|Northern Ireland")
skim(df)
df <- la_codes %>% filter(type!="Sui Generis"|"Scotland"|"Wales"|"Northern Ireland")
skim(df)
df <- la_codes %>% filter(type!="Sui Generis"&type!="Scotland"&type!="Wales"&type!="Northern Ireland")
skim(df)
#met districts are mainly elected by thirds, those that are not:
# Doncaster, Rotherham, Birmingham all elect whole council
# Districts are weird and will need lot of separate info
# Unitary Authorities
#
unique(df$type)
df %>% select(name==d_2)
df %>% select(name in d_2)
df %>% select(name %in% d_2)
skim(df)
df %>% filter(name %in% d_2)
d_2 <- c("Doncaster","Rotherham","Birmingham")
df %>% filter(name %in% d_2)
d_2 <- df %>% filter(name %in% d_2)
met_thirds <- df %>% filter(type=="Metropolitan"&name ~%in% met_whole)
met_whole <- c("Doncaster","Rotherham","Birmingham")
met_whole <- df %>% filter(name %in% met_whole)
met_thirds <- df %>% filter(type=="Metropolitan"&name %notin% met_whole)
`%notin%` <- Negate(`%in%`)
met_thirds <- df %>% filter(type=="Metropolitan"&name %notin% met_whole)
skim(met_thirds)
temp <- c("Doncaster","Rotherham","Birmingham")
met_whole <- df %>% filter(name %in% temp)
`%notin%` <- Negate(`%in%`)
met_thirds <- df %>% filter(type=="Metropolitan"&name %notin% temp)
skim(met_thirds)
rm(temp)
temp
london <- df %>% filter(type=="London")
skim(london)
county <- df %>% filter(type=='County')
skim(county)
county
county %>% print(n=27)
?Mod
mod(50,5)
10%% 5
10%%3
test_year <- 2021
test_out <- ifelse(mod((test_year-2021),4) == 0, "TRUE","FALSE")
test_out <- ifelse((test_year-2021)%%4 == 0, "TRUE","FALSE")
test_out
test_year <- 2017
test_out <- ifelse((test_year-2021)%%4 == 0, "TRUE","FALSE")
test_out
test_year <- 2018
test_out <- ifelse((test_year-2021)%%4 == 0, "TRUE","FALSE")
test_out
test_year <- 2021
test_out <- ifelse((test_year-2021)%%4 == 0, "TRUE","FALSE")
test_out
test_year <- 2025
test_out <- ifelse((test_year-2021)%%4 == 0, "TRUE","FALSE")
test_out
which_elections <- function(year){
elec.c = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE") #county
elec.b = ifelse((year-2022) %% 4 == 0, "TRUE","FALSE") #london boroughs
elec.doncaster = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE")
elec.rotherham = ifelse((year-2020) %% 4 == 0, "TRUE","FALSE")
elec.birmingham = ifelse((year-2022) %% 4 == 0, "TRUE","FALSE")
elec.dwA = ifelse((year-2023) %% 4 == 0, "TRUE","FALSE") #district whole, group A
elec.dwB = ifelse((year-2020) %% 4 == 0, "TRUE","FALSE") #district whole, group B
elec.dwC = ifelse((year-2022) %% 4 == 0, "TRUE","FALSE") #district whole, group C
elec.d2 = ifelse(year %% 2 == 0,"FALSE","TRUE") #district by halves
elec.d3 = ifelse(county_election == "TRUE","FALSE","TRUE") #district by thirds
elec.met3 = ifelse(county_election == "TRUE","FALSE","TRUE") #metropolitan thirds
elec.u3 = ifelse(county_election == "TRUE","FALSE","TRUE") #unitary thirds
elec.uwA = ifelse((year-2023) %% 4 == 0, "TRUE","FALSE") #unitary whole, group A
elec.uwB = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE") #unitary whole, group A
elec.uwC = ifelse((year-2020) %% 4 == 0, "TRUE","FALSE") #unitary whole, group A
elec.sandc = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE") #scilly and city
}
which_elections(2034)
which_elections <- function(year){
elec.c = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE") #county
elec.b = ifelse((year-2022) %% 4 == 0, "TRUE","FALSE") #london boroughs
elec.doncaster = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE")
elec.rotherham = ifelse((year-2020) %% 4 == 0, "TRUE","FALSE")
elec.birmingham = ifelse((year-2022) %% 4 == 0, "TRUE","FALSE")
elec.dwA = ifelse((year-2023) %% 4 == 0, "TRUE","FALSE") #district whole, group A
elec.dwB = ifelse((year-2020) %% 4 == 0, "TRUE","FALSE") #district whole, group B
elec.dwC = ifelse((year-2022) %% 4 == 0, "TRUE","FALSE") #district whole, group C
elec.d2 = ifelse(year %% 2 == 0,"FALSE","TRUE") #district by halves
elec.d3 = ifelse(elec.c == "TRUE","FALSE","TRUE") #district by thirds
elec.met3 = ifelse(elec.c == "TRUE","FALSE","TRUE") #metropolitan thirds
elec.u3 = ifelse(elec.c == "TRUE","FALSE","TRUE") #unitary thirds
elec.uwA = ifelse((year-2023) %% 4 == 0, "TRUE","FALSE") #unitary whole, group A
elec.uwB = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE") #unitary whole, group A
elec.uwC = ifelse((year-2020) %% 4 == 0, "TRUE","FALSE") #unitary whole, group A
elec.sandc = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE") #scilly and city
elecs <- list(elec.c,elec.b,elec.doncaster)
print("The areas that have elections this year are:")
for(e in elecs){
if(e == TRUE){
print(e)
}
}
}
which_elections(2034)
?depares
?deparse
print(deparse(elec.uwA))
print(deparse(test_year))
print(deparse(substitute(test_year)))
which_elections <- function(year){
elec.c = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE") #county
elec.b = ifelse((year-2022) %% 4 == 0, "TRUE","FALSE") #london boroughs
elec.doncaster = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE")
elec.rotherham = ifelse((year-2020) %% 4 == 0, "TRUE","FALSE")
elec.birmingham = ifelse((year-2022) %% 4 == 0, "TRUE","FALSE")
elec.dwA = ifelse((year-2023) %% 4 == 0, "TRUE","FALSE") #district whole, group A
elec.dwB = ifelse((year-2020) %% 4 == 0, "TRUE","FALSE") #district whole, group B
elec.dwC = ifelse((year-2022) %% 4 == 0, "TRUE","FALSE") #district whole, group C
elec.d2 = ifelse(year %% 2 == 0,"FALSE","TRUE") #district by halves
elec.d3 = ifelse(elec.c == "TRUE","FALSE","TRUE") #district by thirds
elec.met3 = ifelse(elec.c == "TRUE","FALSE","TRUE") #metropolitan thirds
elec.u3 = ifelse(elec.c == "TRUE","FALSE","TRUE") #unitary thirds
elec.uwA = ifelse((year-2023) %% 4 == 0, "TRUE","FALSE") #unitary whole, group A
elec.uwB = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE") #unitary whole, group A
elec.uwC = ifelse((year-2020) %% 4 == 0, "TRUE","FALSE") #unitary whole, group A
elec.sandc = ifelse((year-2021) %% 4 == 0, "TRUE","FALSE") #scilly and city
elecs <- list(elec.c,elec.b,elec.doncaster)
print("The areas that have elections this year are:")
for(e in elecs){
if(e == TRUE){
print(deparse(substitute(e)))
}
}
}
which_elections(2034)
